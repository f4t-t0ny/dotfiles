#!/bin/bash

for file in ~/.bash/functions.d/*; do 
  log "loading $file"
  . $file;
done

function ag(){
arg=$1
case $arg in
    u|ud) arg=update;;
    ug) arg=upgrade;;
    i)  arg=install;;
    r)  arg=remove;;
    ar) arg=autoremove;;
    p)  arg=purge;;
    dl) arg=download;;
    du) arg=dist-upgrade;;
    bd) arg=build-dep;;
    src) arg=source;;
    *)  echo 'Argument nicht korrekt!';
        return 1;
esac
shift
sudo apt-get $arg $*
}

function ac(){
arg=$1
case $arg in 
    s) arg="search -n";;
    dp) arg=depends;;
    sh) arg=show;;
    *) echo 'Argument nicht korrekt!';
       return 1;
esac
shift
apt-cache $arg $*
}

function af(){
sudo apt-fast $*
}
complete -f -F _apt_file af

function acs(){
apt-cache search -n $*
}

function user-mount() {
udisks --mount $*
}

function user-unmount() {
udisks --unmount $*
}

function xdmesg() {
dmesg -T |sed -e 's|\(^.*'`date +%Y`']\)\(.*\)|\x1b[0;34m\1\x1b[0m - \2|g'
}

function undo-unzip() {
unzip -l $1 | awk '{print $4}' | tail -n +4 | xargs -n 1 rm -v 
unzip -l $1 | awk '{print $4}' | tail -n +4 | xargs -n 1 dirname | uniq | grep -v ^.$ | xargs -n 1 rmdir -pv 2>/dev/null
}

# building
function mka() {
schedtool -B -n 1 -e ionice -n 1 make -j `cat /proc/cpuinfo | grep "^processor" | wc -l` "$@"
}

#Southpark-dl
function spdl() {
# requires rtmpdump, ffmpeg and mkvtoolnix
# $0 season episode
sn=$1
en=$2
TMP=/tmp/spdl
F_BN=sps$(printf %02d ${sn}; printf e%02d ${en});
MKV_OUT=${TMP}/${F_BN}.mkv
echo $MKV_OUT
#If outfile already exists, finish
if [ -f $MKV_OUT ]
    then echo "File $MKV_OUT already exists";
    return 0;
fi
#Create tmp if doesn't exist
test \! -d $TMP && mkdir -p $TMP
#Download parts for episode
for i in $(seq 1 4); \
do URL="rtmpe://cp75298.edgefcs.net/ondemand/mtvnorigin/gsp.comedystor/com/sp/season-${sn}/$(printf %02d ${sn}; printf %02d ${en})/acts/$(printf %02d ${sn}; printf %02d ${en})_${i}_DI_640x480_500kbps.flv";
FLV=${TMP}/${F_BN}_part${i}.flv
if [ \! -f ${FLV} ]
    then  rtmpdump -r $URL -o $FLV;
else 
    echo "$FLV already exists"; # Skip if downloaded already
fi
#Convert each part to mkv
MKV=${TMP}/${F_BN}_part${i}.mkv
if [ \! -f ${MKV} ]
    then ffmpeg \
    -i ${FLV} \
    -vcodec copy \
    -acodec copy \
    ${MKV};
else 
    echo "${MKV} already exists"; # Skip if converted before
fi

if [ $i -eq 1 ]
    then MKVS=$MKV;
else 
    MKVS="$MKVS +$MKV";
fi
done;
if [ \! -f $MKV_OUT ]
    then mkvmerge -o $MKV_OUT $MKVS;
    rm -vf $TMP/*part*;
else 
    echo "$MKV_OUT already exists"
fi

return 0
}




#function matlab() {
#ML_PATH=~/opt/matlab/bin
#ARGS="-desktop -nosplash$*"
#EXEC=matlab
#$ML_PATH/$EXEC $ARGS
#}

function findfunc() {
shopt -s extdebug
declare -F $*
shopt -u extdebug
}

function vifunc() {
test $# -eq 0 && echo "no arguments given, quitting..." && return 1
vi +$(findfunc $1 | cut -f2,3 -d ' ')
}

function setwp() {
# Set picture $1 as desktop background
# 0 - Auto
# 1 - Centered
# 2 - Tiled
# 3 - Stretched
# 4 - Scaled
# 5 - Zoomed
img=$(readlink -f $1)
for monitor in monitor0 monitor1; do
xfconf-query -c xfce4-desktop -p /backdrop/screen0/$monitor/image-path -s $img
xfconf-query -c xfce4-desktop -p /backdrop/screen0/$monitor/image-style -s 3
xfconf-query -c xfce4-desktop -p /backdrop/screen0/$monitor/image-show -s false
xfconf-query -c xfce4-desktop -p /backdrop/screen0/$monitor/image-show -s true
done
}

function setrandomwp(){
DIR="$HOME/.backgrounds" 
randimg=$(echo $DIR/* | cut -d " " -f$(($RANDOM % $(ls -1 $DIR/| wc -l))))
echo $setwp $RANDOM
setwp $randimg
}

function mntenc(){
target=$1
case $target in
    dropbox)
            ENC_DIR=~/Dropbox/encrypted
            MNT_PT=~/decrypted
            ;;
    disk)
            ENC_DIR=$EXTERNAL_DISK_256GB/.enc
            MNT_PT=/tmp/decrypted
            ;;
    *)
            echo "wrong arguments!"
            return 1
            ;;
esac
encfs $ENC_DIR $MNT_PT 
}

function startvm(){
VM=$1
VBOX_EXEC=/usr/lib/virtualbox/VirtualBox 
VM_COMMENT=
VM_ID=

case $VM in
    natty) 
            VM_COMMENT="Natty Narwhal"
            VM_ID="9b122548-79f8-4456-a7eb-331188d4a1ad"
            ;;
    win7)   VM_COMMENT="Win7"
            VM_ID="5f08e731-041e-4599-b01e-5999ef8d8db2"
            ;;
    *)
            echo "wrong arguments!"
            return 1
            ;;
esac

# Start VM with VirtualBox
$VBOX_EXEC \
--comment $VM_COMMENT \
--startvm $VM_ID
}    

function vid2iso(){
VID=$1
ISO=$2
BASE=${VID%????}
VOB=${BASE}_.vob
DVDDIR=/tmp/$BASE
mkdir $DVDDIR
ffenc 4dvdstyler $VID ${VOB}
dvdwizard \
        -c 600 \
        -o $DVDDIR \
        ${VOB}
genisoimage \
        -dvd-video \
        -udf \
        -o $ISO \
        $DVDDIR
}
